function spikeDensity = SpikeDensity(res, varargin)
% spikeDensity = SpikeDensity(res, varargin)
% [sampleRate, binSize, bandWidth]

    [sampleRate, binSize, bandWidth, minSpikes, spikeDensity] = DefaultArgs(varargin, {20000, 1e-3, 10e-3, 1e2, []});

    res = res ./ sampleRate;
    if length(res) < minSpikes, return; end
    
    res = sort(res);
        %    bandWidth = round(bandWidth * sampleRate);
    binEdges = res(1) : binSize : res(end);
    nBins = length(binEdges) - 1;
    [counts, ~] = histc(res, binEdges);
    counts = counts ./ (nBins * binSize);
    
    N = 10;
    xBins = [-N : N];
    gw = exp(-power(xBins, 2) ./ (2 * bandWidth ^ 2));
    gw = gw ./ sum(gw);
    spikeDensity = conv(counts, gw, 'same');


    %% ksd with Gaussian kernel
%     nSamples = length(res);
%     maxSamples = max(1 : nSamples + 3 * bandWidth);
%     n = 2 ^ (nextpow2(maxSamples));
%     fftRes = fft(counts, n);
%     f = (0 : n - 1) / n;
%     f = [-f(1 : n / 2 + 1) f(n / 2 : - 1 : 2)];
%     f = f';
%     kernelFun = exp(- 0.5 * (bandWidth * 2 * pi * f) .^2);
%     spikeDensity = ifft(fftRes .* kernelFun, n);
%     spikeDensity = spikeDensity(1 : nSamples);
    keyboard;
end